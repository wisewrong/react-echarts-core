{"version":3,"file":"index.js","sourceRoot":"","sources":["index.tsx"],"names":[],"mappings":"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","sourcesContent":["import React, { useRef, useLayoutEffect, useCallback, useMemo } from 'react';\nimport ResizeObserver from 'resize-observer-polyfill';\nimport Empty from './Empty';\nimport { debounce, isFunction } from 'lodash-es';\nimport * as echarts from 'echarts/core';\nimport {\n  TooltipComponent,\n  GridComponent,\n  LegendComponent,\n  DataZoomComponent,\n} from 'echarts/components';\nimport { PieChart, LineChart, BarChart } from 'echarts/charts';\nimport type { EChartsOption } from 'echarts';\nimport { LabelLayout, UniversalTransition } from 'echarts/features';\nimport { CanvasRenderer } from 'echarts/renderers';\nimport { THEME_NAME } from './theme';\nimport './index.css';\n\nexport type { EChartsOption } from 'echarts';\n\nexport interface ChartProps {\n  className?: string;\n  style?: React.CSSProperties;\n  /**  echarts 图表配置 */\n  option: EChartsOption;\n  /** echarts 主题配置 */\n  theme?: string | Record<string, any>;\n  /** 更新数据时 是否清除画布 */\n  clear?: boolean;\n  /** 是否为空 */\n  empty?: boolean;\n  /** 图表初始化成功后的回调, 提供 echarts 实例 */\n  onChartReady?: (ref: echarts.ECharts) => void;\n}\n\necharts.use([\n  LineChart,\n  PieChart,\n  BarChart,\n  TooltipComponent,\n  LegendComponent,\n  DataZoomComponent,\n  GridComponent,\n  CanvasRenderer,\n  LabelLayout,\n  UniversalTransition,\n]);\n\n/**\n * 基础图表组件, 基于 ECharts 封装\n * - 实现了 resize 功能\n * - 默认支持 Pie, Line, Bar 三种类型的图表, 其他图表类型需要自行扩展\n * > eg:\n * > ```js\n * > import { ScatterChart } from 'echarts/charts';\n * > import * as echarts from 'echarts/core';\n * > echarts.use([ScatterChart]);\n * > ```\n */\nconst ChartCore: React.FC<ChartProps> = ({\n  className,\n  style,\n  option,\n  empty,\n  clear,\n  theme,\n  onChartReady,\n}) => {\n  // echarts 实例\n  const $chart = useRef<echarts.ECharts>();\n  const observerRef = useRef<ResizeObserver>();\n  const chartRef = useRef<HTMLDivElement>(null);\n  const chartWrapperRef = useRef<HTMLDivElement>(null);\n\n  // resize\n  const resizeHandler = useCallback(() => {\n    try {\n      $chart.current?.resize();\n    } catch (e) {\n      console.warn(e);\n    }\n  }, []);\n\n  const debounceResizeHandler = useMemo(\n    () => debounce(resizeHandler, 160),\n    [resizeHandler],\n  );\n\n  // 移除对 chartWrapper.resize 事件的监听\n  const removeResizeHandler = useCallback(() => {\n    try {\n      observerRef.current?.unobserve(chartWrapperRef.current as Element);\n    } catch {}\n    observerRef.current = undefined;\n  }, []);\n\n  // 监听 chartWrapper 的 resize 事件\n  const addResizeHandler = useCallback(() => {\n    removeResizeHandler();\n    observerRef.current = new ResizeObserver(debounceResizeHandler);\n    observerRef.current.observe(chartWrapperRef.current as Element);\n  }, [debounceResizeHandler, removeResizeHandler]);\n\n  // 初始化图表\n  const initChart = useCallback(() => {\n    $chart.current = echarts.init(\n      chartRef.current as HTMLElement,\n      theme || THEME_NAME,\n    );\n    $chart.current.setOption(option);\n    isFunction(onChartReady) && onChartReady($chart.current);\n\n    // 绑定 resize 事件\n    if (!observerRef.current) addResizeHandler();\n  }, [addResizeHandler, onChartReady, option, theme]);\n\n  // 更新图表数据\n  const updateChart = useCallback(() => {\n    if (!$chart.current) return;\n    clear && $chart.current.clear();\n    $chart.current.setOption(option);\n  }, [clear, option]);\n\n  // 销毁图表\n  const dispose = useCallback(() => {\n    try {\n      removeResizeHandler();\n      $chart.current?.dispose();\n    } catch (e) {\n      console.warn('Charts Dispose Error: ', e);\n    }\n  }, [removeResizeHandler]);\n\n  useLayoutEffect(() => {\n    if (empty) {\n      dispose();\n    } else if ($chart.current) {\n      updateChart();\n    } else {\n      initChart();\n    }\n  }, [empty, dispose, initChart, updateChart]);\n\n  return (\n    <div\n      className={`chart-wapper ${className}`}\n      ref={chartWrapperRef}\n      style={style}\n    >\n      {!empty ? (\n        <div className={'chart-canvas'} ref={chartRef}></div>\n      ) : (\n        <Empty />\n      )}\n    </div>\n  );\n};\n\nexport default ChartCore;\n"]}